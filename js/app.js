// Generated by CoffeeScript 1.9.3
var CarBMWBlue, CarBMWGreen, CarBMWRed, CarMercedesBlue, CarMercedesGreen, CarMercedesRed, FactoryCarBMW, FactoryCarMercedes, ICarBlue, ICarGreen, ICarRed, IFactoryCar, car, factory,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ICarBlue = (function() {
  function ICarBlue() {}

  return ICarBlue;

})();

ICarGreen = (function() {
  function ICarGreen() {}

  return ICarGreen;

})();

ICarRed = (function() {
  function ICarRed() {}

  return ICarRed;

})();

IFactoryCar = (function() {
  function IFactoryCar() {}

  IFactoryCar.prototype.createCarRed = function() {
    throw false;
  };

  IFactoryCar.prototype.createCarGreen = function() {
    throw false;
  };

  IFactoryCar.prototype.createCarBlue = function() {
    throw false;
  };

  return IFactoryCar;

})();

CarBMWBlue = (function(superClass) {
  extend(CarBMWBlue, superClass);

  function CarBMWBlue() {
    return CarBMWBlue.__super__.constructor.apply(this, arguments);
  }

  CarBMWBlue.prototype.type = 'BMW';

  CarBMWBlue.prototype.color = 'blue';

  return CarBMWBlue;

})(ICarBlue);

CarMercedesBlue = (function(superClass) {
  extend(CarMercedesBlue, superClass);

  function CarMercedesBlue() {
    return CarMercedesBlue.__super__.constructor.apply(this, arguments);
  }

  CarMercedesBlue.prototype.type = 'Mercedes';

  CarMercedesBlue.prototype.color = 'blue';

  return CarMercedesBlue;

})(ICarBlue);

CarBMWGreen = (function(superClass) {
  extend(CarBMWGreen, superClass);

  function CarBMWGreen() {
    return CarBMWGreen.__super__.constructor.apply(this, arguments);
  }

  CarBMWGreen.prototype.type = 'BMW';

  CarBMWGreen.prototype.color = 'green';

  return CarBMWGreen;

})(ICarGreen);

CarMercedesGreen = (function(superClass) {
  extend(CarMercedesGreen, superClass);

  function CarMercedesGreen() {
    return CarMercedesGreen.__super__.constructor.apply(this, arguments);
  }

  CarMercedesGreen.prototype.type = "Mercedes";

  CarMercedesGreen.prototype.color = 'green';

  return CarMercedesGreen;

})(ICarGreen);

CarBMWRed = (function(superClass) {
  extend(CarBMWRed, superClass);

  function CarBMWRed() {
    return CarBMWRed.__super__.constructor.apply(this, arguments);
  }

  CarBMWRed.prototype.type = 'BMW';

  CarBMWRed.prototype.color = 'red';

  return CarBMWRed;

})(ICarRed);

CarMercedesRed = (function(superClass) {
  extend(CarMercedesRed, superClass);

  function CarMercedesRed() {
    return CarMercedesRed.__super__.constructor.apply(this, arguments);
  }

  CarMercedesRed.prototype.type = 'Mercedes';

  CarMercedesRed.prototype.color = 'red';

  return CarMercedesRed;

})(ICarRed);

FactoryCarBMW = (function(superClass) {
  extend(FactoryCarBMW, superClass);

  function FactoryCarBMW() {
    return FactoryCarBMW.__super__.constructor.apply(this, arguments);
  }

  FactoryCarBMW.prototype.createCarRed = function() {
    return new CarBMWRed();
  };

  FactoryCarBMW.prototype.createCarGreen = function() {
    return new CarBMWGreen();
  };

  FactoryCarBMW.prototype.createCarBlue = function() {
    return new CarBMWBlue();
  };

  return FactoryCarBMW;

})(IFactoryCar);

FactoryCarMercedes = (function(superClass) {
  extend(FactoryCarMercedes, superClass);

  function FactoryCarMercedes() {
    return FactoryCarMercedes.__super__.constructor.apply(this, arguments);
  }

  FactoryCarMercedes.prototype.createCarRed = function() {
    return new CarMercedesRed();
  };

  FactoryCarMercedes.prototype.createCarGreen = function() {
    return new CarMercedesGreen();
  };

  FactoryCarMercedes.prototype.createCarBlue = function() {
    return new CarMercedesBlue();
  };

  return FactoryCarMercedes;

})(IFactoryCar);


/*
  context
 */

factory = new FactoryCarMercedes();

car = factory.createCarGreen();

console.log({
  "type": car.type,
  "color": car.color
});
